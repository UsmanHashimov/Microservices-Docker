name: dockercompose4388188509798801967
services:
  apigateway.api:
    build:
      context: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker
      dockerfile: src/APIGateway/APIGateway.API/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: APIGateway.API
      target: base
    container_name: APIGateway.API_1
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: apigatewayapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net8.0/APIGateway.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker\src\APIGateway\APIGateway.API
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  db1:
    container_name: db1
    environment:
      POSTGRES_DB: DepartmentDockerDB
      POSTGRES_PASSWORD: usmonjon01
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      db-network: null
    ports:
      - mode: ingress
        target: 5432
        published: "5433"
        protocol: tcp
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/DepartmentDockerDB
        volume: {}
  db2:
    container_name: db2
    environment:
      POSTGRES_DB: EmployeeDockerDB
      POSTGRES_PASSWORD: usmonjon01
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      db-network: null
    ports:
      - mode: ingress
        target: 5432
        published: "5434"
        protocol: tcp
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/EmployeeDockerDB
        volume: {}
  db3:
    container_name: db3
    environment:
      POSTGRES_DB: PositionDockerDB
      POSTGRES_PASSWORD: usmonjon01
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      db-network: null
    ports:
      - mode: ingress
        target: 5432
        published: "5435"
        protocol: tcp
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/PositionDockerDB
        volume: {}
  db4:
    container_name: db4
    environment:
      POSTGRES_DB: ProjectDockerDB
      POSTGRES_PASSWORD: usmonjon01
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      db-network: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/ProjectDockerDB
        volume: {}
  department.api:
    build:
      context: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker
      dockerfile: src/Department/Department.API/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Department.API
      target: base
    container_name: Department.API
    depends_on:
      db1:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: departmentapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net8.0/Department.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      db-network: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker\src\Department\Department.API
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  employee.api:
    build:
      context: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker
      dockerfile: src/Employee/Employee.API/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Employee.API
      target: base
    container_name: Employee.API
    depends_on:
      db2:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: employeeapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net8.0/Employee.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      db-network: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker\src\Employee\Employee.API
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  position.api:
    build:
      context: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker
      dockerfile: src/Position/Position.API/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Position.API
      target: base
    container_name: Position.API
    depends_on:
      db3:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: positionapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net8.0/Position.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      db-network: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker\src\Position\Position.API
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  project.api:
    build:
      context: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker
      dockerfile: src/Project/Project.API/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Project.API
      target: base
    container_name: Project.API
    depends_on:
      db4:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: projectapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net8.0/Project.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      db-network: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker\src\Project\Project.API
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\Documents\.NET\Uy ishi\MicroservicesDocker
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\A C E R   N I T R O\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
networks:
  db-network:
    name: dockercompose4388188509798801967_db-network
    driver: bridge
  default:
    name: dockercompose4388188509798801967_default
volumes:
  pgdata:
    name: dockercompose4388188509798801967_pgdata